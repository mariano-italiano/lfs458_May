kubectl get pods
kubectl exec -it nginx-pod -- sh
kubectl apply -f security-pod.yaml 
kubectl get pod
kubectl events
vi security-context-pod.yaml
kubectl apply -f security-context-pod.yaml
kubectl get pods
kubectl exec -it security-context-pod -- sh
id student
kubectl exec -it security-context-pod -- sh
cp -rp security-context-pod.yaml security-context-pod2.yaml 
vi security-context-pod2.yaml
kubectl apply -f security-context-pod2.yaml
vi security-context-pod2.yaml
kubectl apply -f security-context-pod2.yaml
kubectl exec -it security-context-pod2 -- sh
kubectl exec -it security-context-pod2 -c sec-ctx-demo2 -- sh
kubectl run mk-pod --image marcinkujawski/lfs459-demo:1.0 --dry-run=client -o yaml > mk-pod.yaml
vi mk-pod.yaml
kubectl apply -f mk-pod.yaml
kubectl get pod
kubectl delete pod nginx
kubectl get pod mk-pod
kubectl events
kubectl get pod mk-pod
kubectl replace --force mk-pod.yaml 
kubectl replace --force -f mk-pod.yaml 
kubectl get pod mk-pod
kubectl events
vi mk-pod.yaml
kubectl replace --force -f mk-pod.yaml 
kubectl get pods
kubectl events
vi mk-pod.yaml
kubectl delete pod mk-pod 
kubectl apply -f mk-pod.yaml 
kubectl get pod
kubectl events
vi mk-pod.yaml 
kubectl delete pod mk-pod 
kubectl apply -f mk-pod.yaml 
kubectl  get pods
kubectl expose pod mk-pod --type NodePort --port 80 --name mk-svc
kubectl get svc
kubectl edit svc mk-svc 
vi mk-pod.yaml 
kubectl delete pod mk-pod
kubectl apply -f mk-pod.yaml 
kubectl get pod
vi mk-pod.yaml 
kubectl replace --force -f mk-pod.yaml
kubectl get pod
kubectl events 
vi lfs458-demo.yaml
kubectl apply -f lfs458-demo.yaml
kubectl get pods
kubectl expose pod lfs458-test --type NodePort --port 80 --name lfs-demo-svc
kubectl get svc 
curl http://10.100.73.154
kubectl exec -it lfs458-test -- sh
kubectl exec -it lfs458-test -- bash
kubectl get pods
kubectl events
kubectl get pods
kubectl delete pod lfs458-test mk-pod
cp -rp lfs458-demo.yaml secure-app.yaml
vi secure-app.yaml
kubectl apply -f secur
kubectl apply -f secure-app.yaml 
kubectl  get pods
kubectl exec -it secure-app -- sh
kubectl events
kubectl events --sorty-by .metadata.creationTimestamp
kubectl get events --sorty-by .metadata.creationTimestamp
kubectl  events --sort-by .metadata.creationTimestamp
kubectl get events --sort-by .metadata.creationTimestamp
sudo journalctl -u kubelet
sudo journalctl -u containerd
sudo journalctl -u containerd -p err
sudo journalctl -u kubelet -p err
cd /var/log
ls -la
cd pods
ls -la
cd kube-system_etcd-k8s-master_b35e4de82e257e0eb7683e09fa158f41
ls -la
cd etcd/
ls -la
less 3.log 
sudo less 3.log 
sudo crictl ps -a
sudo crictl ps
cd /var/log/containers/
ls -la
kubectl get pods
kubectl logs noschedule-pod
kubectl logs security-context-pod2
kubectl logs security-context-pod2 --all-containers 
cd /etc/kubernetes/manifests/
ls -la
sudo systemctl status kubelet
vi /lib/systemd/system/kubelet.service
vi /var/lib/kubelet/config.yaml 
vi /etc/systemd/system/kubelet.service.d/10-kubeadm.conf 
kubectl get pod
kubectl debug -it secure-app --image=busybox:1.28 --target=secure-app
kubectl run hard-pod --image pause:3.1 
kubectl get pod
kubectl delete pod hard-pod 
kubectl run hard-pod --image registry.k8s.io/pause:3.1 
kubectl get pod
kubectl exec -it hard-pod -- sh
kubectl exec -it hard-pod -- bash
kubectl exec -it hard-pod -- ls -la
kubectl debug -it hard-pod --image=busybox:1.28 --target=hard-pod
kubectl debug -it hard-pod --image=nicolaka/netshoot --target=hard-pod
cd 
cd lfs458_May/
cd day4
kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v2.7.0/aio/deploy/recommended.yaml
kubectl get all -n kubernetes-dashboard
kubectl get ingress
cp -rp ../day2/web-ingress.yaml dashboard-ingress.yaml
vi dashboard-ingress.yaml
kubectl apply -n kubernetes-dashboard -f dashboard-ingress.yaml 
kubectl -n ingress-nginx get svc
kubectl patch svc kubernetes-dashboard -n kubernetes-dashboard --type='json' -p='[{"op": "replace", "path": "/spec/type", "value": "NodePort"}]' 
kubectl get all -n kubernetes-dashboard
kubectl patch svc kubernetes-dashboard -n kubernetes-dashboard --type='json' -p='[{"op": "replace", "path": "/spec/ports/0/nodePort", "value": 30080}]'
kubectl get all -n kubernetes-dashboard
vi dashboard-ingress.yaml
kubectl apply -f dashboard-ingress.yaml
kubectl delete -A ValidatingWebhookConfiguration ingress-nginx-admission
kubectl apply -f dashboard-ingress.yaml
vi dashboard-ingress.yaml 
kubectl get clusterrole
kubectl -n kubernetes-dashboard create sa dashboard-admin
kubectl create clusterrolebinding dashboard-admin-binding --clusterrole cluster-admin --serviceaccount=kubernetes-dashboard:dashboard-admin
kubectl -n kubernetes-dashboard create token dashboard-admin --duration=8760h
vi dashboard-admin-token
kubectl create -n kubernetes-dashboard secret generic --from-literal username=dashboard-admin --from-file=token=dashboard-admin-token 
kubectl create -n kubernetes-dashboard secret dashboard-admin-credentials generic --from-literal username=dashboard-admin --from-file=token=dashboard-admin-token 
kubectl create -n kubernetes-dashboard secret generic dashboard-admin-credentials --from-literal username=dashboard-admin --from-file=token=dashboard-admin-token 
kubectl describe secrets -n kubernetes-dashboard 
kubectl describe secrets -n kubernetes-dashboard dashboard-admin-credentials 
kubectl get secrets -n kubernetes-dashboard dashboard-admin-credentials
kubectl get secrets -n kubernetes-dashboard dashboard-admin-credentials -o jsonpath='{.data.username}'
kubectl get secrets -n kubernetes-dashboard dashboard-admin-credentials -o jsonpath='{.data.username}' | base64 -d && echo
kubectl get secrets -n kubernetes-dashboard dashboard-admin-credentials -o jsonpath='{.data.tokne}' | base64 -d && echo
kubectl get secrets -n kubernetes-dashboard dashboard-admin-credentials -o jsonpath='{.data.token}' | base64 -d && echo
cat dashboard-ingress.yaml 
cat ../day2/web-ingress.yaml 
watch -n1 kubectl get pods
kubectl rollout restart -n default deployment dashboard-deployment
kubectl get sa -n kubernetes-dashboard 
history
history | awk '$1 > 886' | cut -c 8- > ../day4-history.txt
cd ..
git status
git add .
git commit -m "Adding day4 content"
git push
git pull
git config pull.rebase false
git pull
git push
git sttaus
git status
cd day4
curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
chmod 700 get_helm.sh
./get_helm.sh
helm -v
helm version
helm search --help
helm repo add bitnami https://charts.bitnami.com/bitnami
helm search repo bitnami/nginx
helm search repo bitnami/postgres
helm search repo bitnami/wordpress
helm install bitnami/nginx --generate-name
export SERVICE_PORT=$(kubectl get --namespace default -o jsonpath="{.spec.ports[0].port}" services nginx-1716465930)
export SERVICE_IP=$(kubectl get svc --namespace default nginx-1716465930 -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
echo "http://${SERVICE_IP}:${SERVICE_PORT}"
kubectl get svc --namespace default nginx-1716465930
kubectl edit svc nginx-1716465930
kubectl get svc --namespace default nginx-1716465930
helm install happy-panda bitnami/wordpress
helm list
helm uninstall nginx-1716465930
helm list
helm uninstall happy-panda
helm install happy-panda bitnami/wordpress -n wordpress
helm install happy-panda bitnami/wordpress -n wordpress --create-namespace
kubectl get secret --namespace wordpress happy-panda-wordpress -o jsonpath="{.data.wordpress-password}" | base64 -d
kubectl get all -n wordpress
helm list
helm list -n wordpres
helm list -n wordpress
kubectl get all -n wordpress
kubectl -n wordpress events
kubectl get pod happy-panda-wordpress-cb965967-bw6m4 -o wide -n wordpress
kubectl get pod happy-panda-wordpress-cb965967-bw6m4 -o yaml -n wordpress
cp -rp ../day3/test-pv* .
mv test-pv.yaml wordpress-pv.yaml
mv test-pvc.yaml wordpress-pvc.yaml
vi wordpress-pv.yaml 
vi wordpress-pvc.yaml
kubectl apply -f wordpress-pv.yaml -f wordpress-pvc.yaml -n wordpress 
kubectl get pv,pvc -n wordpress
kubectl delete -f wordpress-pvc.yaml
kubectl delete -f wordpress-pvc.yaml -n wordpress 
kubectl delete -f wordpress-pv.yaml -n wordpress 
kubectl get pv,pvc -n wordpress
kubectl edit pvc -n wordpress happy-panda-wordpress
vi wordpress-pv.yaml 
kubectl apply -f wordpress-pv.yaml -n wordpress 
vi wordpress-pv.yaml 
kubectl edit pvc -n wordpress happy-panda-wordpress
vi wordpress-pv.yaml 
vi ../day3/test-pv.yaml 
vi wordpress-pv.yaml 
kubectl apply -f wordpress-pv.yaml -n wordpress 
kubectl get pv,pvc -n wordpress
kubectl edit pvc -n wordpress happy-panda-wordpress
kubectl get pv,pvc -n wordpress
kubectl get all -n wordpress
watch -n1 kubectl get all -n wordpress
kubectl events
kubectl get pv,pvc -n wordpress
kubectl edit pvc -n wordpress data-happy-panda-mariadb-0
kubectl get pv,pvc -n wordpress
cp -rp wordpress-pv.yaml wordpress-mariadb-pv.yaml
vi wordpress-mariadb-pv.yaml
kubectl apply -f wordpress-mariadb-pv.yaml
kubectl get pv,pvc -n wordpress
vi wordpress-mariadb-pv.yaml
kubectl get pv,pvc -n wordpress
kubectl get all -n wordpress
kubectl events
kubectl edit pvc -n wordpress data-happy-panda-mariadb-0
kubectl delete -n wordpress pv wordpress-mariadb-pv 
kubectl get pv,pvc -n wordpress
kubectl edit pv wordpress-mariadb-pv 
kubectl get pv,pvc -n wordpress
vi wordpress-mariadb-pv.yaml 
kubectl edit pvc -n wordpress data-happy-panda-mariadb-0
vi wordpress-mariadb-pv.yaml 
kubectl get pvc -A
helm list
helm list -a
kubectl delete pvc data-happy-panda-mariadb-0 
kubectl get pvc -A
kubectl apply -f wordpress-mariadb-pv.yaml 
kubectl get pv,pvc -n wordpress
kubectl get all -nn wordpress
kubectl get all -n wordpress
kubectl events
helm uninstall happy-panda -n wordpress-
helm uninstall happy-panda -n wordpress
kubectl get pv
kubectl get pv,pvc -A
kubectl delete pvc data-happy-panda-mariadb-0 -n wordpress 
kubectl get pv,pvc -A
kubectl patch pv wordpress-mariadb-pv -p '{"spec":{"claimRef":null}}'
kubectl patch pv wordpress-pv -p '{"spec":{"claimRef":null}}'
kubectl get pv,pvc -A
helm install happy-panda bitnami/wordpress -n wordpress --create-namespace
kubectl get all -n wordpress 
watch -n1 kubectl get all -n wordpress 
kubectl events
kubectl edit pvc -n wordpress data-happy-panda-mariadb-0
kubectl edit pvc -n wordpress happy-panda-wordpress 
watch -n1 kubectl get all -n wordpress 
kubectl events
helm get values happy-panda -n wordpress
helm show values bitnami/wordpress
helm show values bitnami/wordpress > my-wp-values.yaml
vi my-wp-values.yaml
helm uninstall happy-panda -n wordpress
helm install happy-panda bitnami/wordpress -n wordpress --create-namespace --values my-wp-values.yaml 
helm uninstall happy-panda -n wordpress
kubectl get svc -A
kubectl get svc -A | grep 30080
vi my-wp-values.yaml 
helm install happy-panda bitnami/wordpress -n wordpress --create-namespace --values my-wp-values.yaml 
kubectl get all -n wordpress
helm uninstall happy-panda -n wordpress
helm list -a
ls -la ../day3
ls -la ../day2
cat ../day3/simple-app.yaml 
helm create simple-app
ls -la
cd simple-app/
ls -la
tree
sudo apt-get install tree -y
tree
rmdir charts/
rm -rf templates/tests/
vi values.yaml 
rm templates/serviceaccount.yaml
vi Chart.yaml 
cd templates/
ls -la
vi deployment.yaml
vi secret.yaml
vi configmap.yaml
kubectl get deploy
kubectl get svc
kubectl get svc -o yaml web-svc 
vi service.yaml
vi deployment.yaml 
vi service.yaml
ls -la
vi hpa.yaml 
vi ingress.yaml 
vi ../values.yaml 
vi ingress.yaml 
cd ..
helm lint simple-app/
vi simple-app/templates/deployment.yaml 
vi simple-app/values.yaml 
helm lint simple-app/
helm package simple-app --version 0.1
helm install simple-app-0.1.tgz --create-namespace -n simple 
helm install my-helm-app  simple-app-0.1.tgz --create-namespace -n simple 
helm uninstall my-helm-app
helm uninstall my-helm-app -n simple
vi simple-app/templates/hpa.yaml 
helm package simple-app --version 0.1
rm /home/student/lfs458_May/day4/simple-app-0.1.tgz
helm package simple-app --version 0.1
helm install my-helm-app  simple-app-0.1.tgz --create-namespace -n simple 
kubectl get all -n simple
kubectl -n simple get ingress
kubectl get secret -n simple
kubectl get secret -n simple nginx-htpasswd -o yaml
echo "bWFyaW9sYTokYXByMSRkUWN1aXpzaiQzUXphU3ZVcnhTRS85UmQzYWxyZzQvCg=="|base64 -d
kubectl -n simple get ingress simple-app-ingress -o json
kubectl -n simple get ingress simple-app-ingress -o jsonpath "{.spec.rules[0].host}"
kubectl -n simple get ingress simple-app-ingress -o jsonpath="{.spec.rules[0].host}"
vi simple-app/templates/NOTES.txt 
vi simple-app/values.yaml 
vi simple-app/templates/NOTES.txt 
kubectl -n simple get ingress simple-app-ingress -o jsonpath="{.spec.rules[0].host}" && echo 
vi simple-app/templates/NOTES.txt 
helm package simple-app --version 0.1
helm uninstal -n simple my-helm-app
helm uninstall -n simple my-helm-app
helm install my-helm-app  simple-app-0.1.tgz --create-namespace -n simple 
kubectl -n simple get ingress simple-app-ingress -o jsonpath="{.spec.rules[0].host}" && echo
vi crd-sslconfigs.yaml
kubectl api-versions | grep exten
vi crd-sslconfigs.yaml
kubectl apply -f crd-sslconfigs.yaml
vi my-sslconfig.yaml
kubectl apply -f my-sslconfig.yaml
kubectl get sslc
kubectl describe sslc servera-sslconfig 
kubectl get sslc servera-sslconfig -o jsonpath
kubectl get sslc servera-sslconfig -o json
kubectl get sslc servera-sslconfig -o jsonpath='{spec.key}'
kubectl get sslc servera-sslconfig -o jsonpath='{.spec.key}'
git status
history
history | awk '$1 > 886' | cut -c 8- > ../day4-history.txt
